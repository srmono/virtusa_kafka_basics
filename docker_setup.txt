step1: enable hyper-v and windows system linux 

    control panel -> 
        programs & features -> 
            left side select windows features on and off -> 
                select "Hyper-v" and "windows sub system for linux" ->
                    follow the steps and restart your system 

step2: Download and install wsl and docker 

- First install wsl: 
    wsl: https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi 

- install docker after wsl installation:
    docker_desktop: https://docs.docker.com/desktop/install/windows-install/

step3: start docker desktop
    start docker desktop (if required restart system/docker desktop)

ensure that docker desktop is running 

Note: launching kafka container I will explain in the session 

--------------------------------------------------

Run docker container: 

docker-compose -f docker-compose-core.yml -p sample up -d

Enter into docker container: docker exec -it [container_name or container_id] bash
    docker exec -it kafka bash 

Create topic
***note: replication factor 2 must require multiple kafka nodes
    kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-hello --partitions 1 --replication-factor 1

List topics:
    kafka-topics.sh --bootstrap-server localhost:9092 --list 

Describe Topic:
    kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic t-hello

------------------------------

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-hello --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-fixedrate --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-fixedrate-2 --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-multi-partitions --partitions 1 --replication-factor 1

kafka-topics.sh --bootstrap-server localhost:9092 --alter --topic t-multi-partitions --partitions 4 


kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-employee --partitions 1 --replication-factor 1
kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-employee-2 --partitions 1 --replication-factor 1

kafka-console-consumer.sh --bootstrap-server localhost:9092 --offset earliest --partition 0 --topic t-employee

----------------------------------

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-commodity --partitions 1 --replication-factor 1

kafka-console-consumer.sh --bootstrap-server localhost:9092 --offset earliest --partition 0 --topic t-commodity


kafka-consumer-groups.sh --bootstrap-server localhost:9092 --group cg-dashboard --describe 

--------------------

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-rebalance --partitions 1 --replication-factor 1


kafka-topics.sh --bootstrap-server localhost:9092 --alter --topic t-rebalance --partitions 2


kafka-topics.sh  --bootstrap-server localhost:9092 --topic t-rebalance --describe 

----
-- filtering messages

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-location --partitions 1 --replication-factor 1

--- 

kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-purchase-request --partitions 1 --replication-factor 1


kafka-topics.sh --bootstrap-server localhost:9092 --create --topic t-payment-request --partitions 1 --replication-factor 1